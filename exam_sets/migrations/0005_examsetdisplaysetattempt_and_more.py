# Generated by Django 5.0.7 on 2025-04-29 14:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('exam_sets', '0004_examsetdisplayset_examsetquizgroup_examsetquiz'),
        ('questions', '0015_alter_examtype_exam_years_alter_examtype_name_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamSetDisplaySetAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct_count', models.PositiveIntegerField(default=0)),
                ('incorrect_count', models.PositiveIntegerField(default=0)),
                ('unanswered_count', models.PositiveIntegerField(default=0)),
                ('success_rate', models.FloatField(default=0)),
                ('motivational_message', models.TextField(blank=True, null=True)),
                ('details', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('display_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='exam_sets.examsetdisplayset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_set_display_set_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExamSetDisplaySetIncorrectQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_answer', models.CharField(blank=True, max_length=255, null=True)),
                ('correct_answer', models.CharField(max_length=255)),
                ('user_time', models.FloatField(blank=True, null=True)),
                ('question_order', models.PositiveIntegerField()),
                ('display_set_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incorrect_questions', to='exam_sets.examsetdisplaysetattempt')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_set_display_set_incorrect_attempts', to='questions.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_set_display_set_incorrect_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-display_set_attempt__created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExamSetQuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct_count', models.PositiveIntegerField(default=0)),
                ('incorrect_count', models.PositiveIntegerField(default=0)),
                ('unanswered_count', models.PositiveIntegerField(default=0)),
                ('success_rate', models.FloatField(default=0)),
                ('motivational_message', models.TextField(blank=True, null=True)),
                ('details', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='exam_sets.examsetquiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_set_quiz_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExamSetIncorrectQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_answer', models.CharField(blank=True, max_length=255, null=True)),
                ('correct_answer', models.CharField(max_length=255)),
                ('user_time', models.FloatField(blank=True, null=True)),
                ('question_order', models.PositiveIntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_set_incorrect_attempts', to='questions.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_set_incorrect_questions', to=settings.AUTH_USER_MODEL)),
                ('quiz_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incorrect_questions', to='exam_sets.examsetquizattempt')),
            ],
            options={
                'ordering': ['-quiz_attempt__created_at'],
            },
        ),
    ]
